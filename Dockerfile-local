# Build Stage
FROM golang:1.24-alpine AS build-env

# 设置工作目录
WORKDIR /src

# 复制 go.mod 和 go.sum
COPY go.mod go.sum ./

# 下载依赖
RUN apk --no-cache add git ca-certificates \
    && go mod download

# 复制源代码
COPY . .

# 编译
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -v -ldflags "-s -w -extldflags '-static'" -o glider

# Final Stage
FROM alpine:latest

# 设置标签
LABEL maintainer="glider-sxx" \
      version="0.0.1" \
      description="Glider with SXX Proxy support"

# 安装必要的运行时依赖
RUN apk -U upgrade --no-cache \
    && apk --no-cache add ca-certificates tzdata \
    && rm -rf /var/cache/apk/*

# 创建应用目录
WORKDIR /app

# 从构建阶段复制编译好的二进制文件
COPY --from=build-env /src/glider /app/glider

# 暴露端口
EXPOSE 8080 8443

# 使用非 root 用户运行
USER 1000

# 设置入口点
ENTRYPOINT ["/app/glider"]

# 默认参数（可被覆盖）
CMD ["-help"]

